{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "ACLXRAYlabvnet"
    }

  },
  "variables": {
    "VirtualNetworkIPPrefix": "10.1.0.0/16",
    "VnetIpArray": "[split(variables('VirtualNetworkIPPrefix'),'.')]",
    "contosoSubnetIpPrefix": "[concat(variables('VnetIpArray')[0],'.',variables('VnetIpArray')[1],'.0.0/24')]",
    "fabrikamSubnetIpPrefix": "[concat(variables('VnetIpArray')[0],'.',variables('VnetIpArray')[1],'.1.0/24')]",
    "contosoSubnetIPArray": "[split(variables('contosoSubnetIpPrefix'),'.')]",
    "fabrikamSubnetIPArray": "[split(variables('fabrikamSubnetIpPrefix'),'.')]",
    "contosoDNSServerIP": "[concat(variables('contosoSubnetIPArray')[0],'.',variables('contosoSubnetIPArray')[1],'.',variables('contosoSubnetIPArray')[2],'.','4')]",
    "fabrikamDNSServerIP": "[concat(variables('fabrikamSubnetIPArray')[0],'.',variables('fabrikamSubnetIPArray')[1],'.',variables('fabrikamSubnetIPArray')[2],'.','4')]",
    "dnsArray": [
      "[variables('contosoDNSServerIP')]",
      "[variables('fabrikamDNSServerIP')]"
    ],
    "bootstrapRoleAssignmentId": "[guid(concat(resourceGroup().id, 'contributor'))]",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "storageAccountName": "aclxray2982550"

  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[deployment().name]",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('bootstrapRoleAssignmentId')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', deployment().name)]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', deployment().name), '2018-11-30').principalId]",
        "scope": "[resourceGroup().id]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "CustomDNS",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('bootstrapRoleAssignmentId'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', deployment().name)]": {}
        }
      },
      
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "5.0",
        "timeout": "PT30M",
        "arguments": "[format(' -resourceGroup {0} -vnetName {1} -dnsIP1 {2} -dnsIP2 {3}', resourceGroup().name, parameters('virtualNetworkName'),variables('contosoDNSServerIP'),variables('fabrikamDNSServerIP'))]", // can pass an arguement string, double quotes must be escaped
        "scriptContent": "
                  param(
                  $resourceGroup,
                  $vnetName,
                  $dnsIP1,
                  $dnsIP2

                  )

                  $ErrorActionPreference = 'Stop'
                  $dnsArray = @($dnsIp1,$dnsIP2)
                  $vnetData = Get-AzVirtualNetwork -ResourceGroupName $resourceGroup -Name $vnetName
                  $vnetdata.DhcpOptions.DnsServers = $dnsArray
                  $vnetData | Set-AzVirtualNetwork
                ",
        "cleanupPreference": "Always",
        "retentionInterval": "P1D"
      }
    }


  ],
  "outputs": {
    "bootstrap": {
      "type": "string",
      "value": "[variables('bootstrapRoleAssignmentId')]"
    }

  }




}
