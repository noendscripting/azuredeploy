{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "EastUs2"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Basic_A2"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "VADMIN"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "LimitedVnet"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Test@2016"
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "FirstSubnet"
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "Dynamic"
    },
    "time": {
      "type": "string",
      "defaultValue": "23:00"
    },
    "virtualNetResourceGroupName": {
      "type": "string",
      "defaultValue": "NetworkSubnet"
    },
    "vrtutalMachineSKU": {
        "type": "string",
        "defaultValue": "2019-Datacenter"
     },
    "virtualMachineImagePublisher": {
        "type": "string",
        "defaultValue": "MicrosoftWindowsServer"
    },
    "virtualMachineImageOffer": {
        "type": "string",
        "defaultValue": "WindowsServer"
    },
        "encryptionKeyVaultName": {
            "type": "string",
            "minLength":0
        },
      "encryptionKeyVaultResourceGroup": {  
        "type": "string",  
        "metadata": {  
          "description": "Resource group of the KeyVault"  
        }  
      },
      "volumeType": {
        "type": "string",
        "defaultValue": "All",
        "allowedValues": [
        "All",
        "Data",
        "OS"
      ],
      "metadata": {
        "description": "Type of the volume OS or Data to perform encryption operation"
      }
      },  
      "forceUpdateTag": {  
        "type": "string",  
        "defaultValue": "1.0",  
        "metadata": {  
          "description": "Pass in an unique value like a GUID everytime the operation needs to be force run"  
        }  
      },
      "resizeOSDisk": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Should the OS partition be resized to occupy full OS VHD before splitting system volume"
        }
      }

  },
  "variables": {
    "VnetID": "[resourceId(parameters('virtualNetResourceGroupName'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkname'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "networkInterfaceName": "[concat(parameters('virtualMachineName'),'NIC')]",
    "publicIpAddressName": "[concat(parameters('virtualMachineName'),'PUBLICIP')]",
    "policyName": "[concat('shutdown-computevm-',parameters('virtualMachineName'))]",
    "vmNicResoucreID":"[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterfaceName'))]",
    "DeploymentNames":{
      "backup":"[concat(parameters('virtualMachineName'),'-BackupConfig')]",
      "encryption":"[concat('encryption',parameters('virtualMachineName'))]"
    }

    
  },
  "resources": [
    //VM NIC
        {
            "name": "[variables('networkInterfaceName')]",
             "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('subnetRef')]"
            ],
            "tags": {
                "displayName": "VMNIC"
            },
            "properties": {
                "primary": true,
                "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                    "subnet": {
                        "id": "[variables('subnetRef')]"
                    },
                    "privateIPAllocationMethod": "Dynamic"
                    }
                }
                ],
                "dnsSettings": {

                }

            }
        },
        // VM Build
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            
            "dependsOn": [
                "[variables('vmNicResoucreID')]"
            ],
            "tags": {
                "displayName": "BaseVM"
            },
            "properties": {
                "osProfile": {
                "computerName": "[parameters('virtualMachineName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                "imageReference": {
                    "publisher": "[parameters('virtualMachineImagePublisher')]",
                    "offer": "[parameters('virtualMachineImageOffer')]",
                    "sku": "[parameters('vrtutalMachineSKU')]",
                    "version": "latest"
                },
                "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                    "storageAccountType": "Standard_LRS"
                    }
                },
                "dataDisks": []
                },
                "networkProfile": {
                "networkInterfaces": [
                    {
                    "id": "[variables('vmNicResoucreID')]"
                    }
                ]

                }

            }
        },
        //Public IP
        {
          "apiVersion": "2015-06-15",
          "location": "[parameters('location')]",
          "name": "[variables('publicIpAddressName')]",
          "Properties": {
            "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
          },
          "tags": {
            "displayName": "BaseVMPublicIP"
          },
          "Type": "Microsoft.Network/publicIpAddresses"
        },
        //Shutdown Schedule
        {
          "apiVersion": "2018-09-15",
          "type": "Microsoft.DevTestLab/schedules",
          "name": "[variables('policyName')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [ 
             "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'))]"
             ],
          "tags": {
            "displayName": "BaseVMShutdown-11:00pm"
          },
          "properties": {
            "status": "Enabled",
            "timeZoneId": "Eastern Standard Time",
            "taskType": "ComputeVmShutdownTask",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15,
              "webhookUrl": null
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',parameters('virtualMachineName'))]",
            "dailyRecurrence": {
              "time": "[parameters('time')]"
            }
          }
        },
        {
          "condition":"[greater(length(parameters('encryptionKeyVaultName')),0)]",
      "name": "[variables('DeploymentNames').encryption]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "tags":{
        "DisplayName":"EncryptionEXT"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'))]"
      ], 
      "properties": {
        "mode":"Incremental",
        "templateLink":{
          "uri": "https://raw.githubusercontent.com/noendscripting/azuredeploy/master/encrypt-extension.json"
        },
        "parameters":{
          "vmName": {
           "value":"[parameters('virtualMachineName')]"
          },
          "keyVaultName": {
            "value":"[parameters('encryptionKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value":"[parameters('encryptionKeyVaultResourceGroup')]"
          },
          "volumeType": {
            "value":"[parameters('volumeType')]"
          },
          "forceUpdateTag": {
            "value":"[parameters('forceUpdateTag')]"
          },
          "resizeOSDisk": {
          "value":"[parameters('resizeOSDisk')]"
        }
      }
    }
  }
  ],
  "outputs": {
    
  }
}