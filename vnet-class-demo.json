{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hubVNETName":
        {
            "defaultValue": "hub-vnet",
            "type": "String"
        },
        "hubVNETIpPrefix": 
        {   "defaultValue": "10.0.0.0/16",
            "type": "string"
        },
        "hubVNETSubnet1Name":
        {
            "defaultValue":"sharedSubnet",
            "type": "string"
        },
        "hubVNETSubnet1IpPrefix":
        {
            "defaultValue": "10.0.1.0/24",
            "type": "string"
        },
         "spokeVNETName":
        {
            "defaultValue": "pilotprod-vnet",
            "type": "String"
        },
        "spokeVNETIpPrefix": 
        {   "defaultValue": "10.1.0.0/16",
            "type": "string"
        },
        "spokeVNETSubnet1Name":
        {
            "defaultValue":"subnet1",
            "type": "string"
        },
        "spokeVNETSubnet1IpPrefix":
        {
            "defaultValue": "10.1.0.0/24",
            "type": "string"
        },
        "routeTableName": {
            "defaultValue": "AllInternetToHubSCUS",
            "type": "String"
        },
        "MainFirewallPIPname": {
            "type": "string",
            "defaultValue":"MainFirewallPIP"
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue":"BaseVM"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "vadmin"
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue":"Test@2016"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue":"Standard_B1ls"
        },
        "vrtutalMachineSKU": {
            "type": "string",
            "defaultValue": "2019-Datacenter"
        },
        "virtualMachineImagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer"
        },
        "virtualMachineImageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer"
        },
        "AzureFirewallName": {
            "type": "string",
            "defaultValue": "MainFirewall"

        }



    },
    "variables":{
        "routeTableId": "Microsoft.Network/routeTables',parameters('routeTableName'))]",
        "spokeVNETid": "[resourceId('Microsoft.Network/virtualNetworks',parameters('spokeVNETName'))]",
        "spokeSubnet1Id":"[concat(variables('spokeVnetid'),'/subnets/',parameters('spokeVNETSubnet1Name'))]",
        "hubVnetid": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubVNETName'))]",
        "hubFirewallSubnetName":"AzurefirewallSubnet",
        "hubFirewallSubnetIpPrefix":"10.0.0.0/24",
        "hubFirewallSubnetId":"[concat(variables('hubVnetid'),'/subnets/',variables('hubFirewallSubnetName'))]",
        "hubFireWallPublicIPId":"[resourceid('Microsoft.Network/publicIPAddresses',parameters('MainFirewallPIPname'))]",
        "vmNICName":"[concat(parameters('virtualMachineName'),'-NIC')]",
        "vmNicResoucreID":"[resourceId('Microsoft.Network/networkInterfaces',variables('vmNICName'))]"

    },
    "resources": [
        //Hub VNET
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-03-01",
            "comments": "Hub VNET with fist subnet",
            "name": "[parameters('hubVNETName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "DisplayName":"HubVnet"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVNETIpPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('hubFirewallSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('hubFirewallSubnetIpPrefix')]",
                            "serviceEndpoints": [],
                            "delegations": []
                        }
                       
                    },
                     {
                        "name": "[parameters('hubVNETSubnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('hubVNETSubnet1IpPrefix')]"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        //Spoke VNET
        {
            "name": "[parameters('spokeVNETName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "SpokeVnet"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spokeVNETIpPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spokeVNETSubnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('spokeVNETSubnet1IpPrefix')]"
                        }
                    }
                    
                ]
            }
        },
        //Hub-to-Spoke-Peer
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('hubVNETName'),'/',parameters('hubVNETName'),'-to-',parameters('spokeVNETName'))]",
            "comments":"Hub-to-Spoke-Peer",
            "dependsOn": [
                "[variables('hubVnetid')]",
                "[variables('spokeVNETid')]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[variables('spokeVnetid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false
            }
        },
        //Spoke-to-Hub-Peer
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-03-01",
            "name": "[concat(parameters('spokeVNETName'),'/',parameters('spokeVNETName'), '-to-',parameters('hubVNETName'))]",
            "comments":"Spoke-to-Hub-Peer",
            "dependsOn": [
                "[variables('hubVnetid')]",
                "[variables('spokeVNETid')]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[variables('hubVNETid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false
            }
        },
        //Hub Firewall
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-04-01",
            "name": "[parameters('azureFirewallName')]",
            "location": "southcentralus",
            "dependson":[

                "[variables('hubVnetid')]",
                "[variables('hubFireWallPublicIPId')]"

            ],
            "tags": {
                "DisplayName":"MainFirewall"
            },
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('hubFireWallPublicIPId')]"
                            },
                            "subnet": {
                                "id": "[variables('hubFirewallSubnetId')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [],
                "natRuleCollections": []
            }
        },
        //FireWall Public IP
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[parameters('MainFirewallPIPname')]",
            "location": "southcentralus",
            "tags":{
                "DisplayName":"MainFireWallPIP"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        //RouteTable
        {
            "name":"[parameters('routeTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "DisplayName": "RouteTable"
            },
            "properties": {
                "routes": [
                ],
                "disableBgpRoutePropagation": true
            }
        },
        //VM NIC
        {
            "name": "[variables('vmNICName')]",
             "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('spokeVNETid')]"
            ],
            "tags": {
                "displayName": "VMNIC"
            },
            "properties": {
                "primary": true,
                "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                    "subnet": {
                        "id": "[variables('spokeSubnet1Id')]"
                    },
                    "privateIPAllocationMethod": "Dynamic"
                    }
                }
                ],
                "dnsSettings": {

                }

            }
        },
        // VM Build
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            
            "dependsOn": [
                "[variables('vmNicResoucreID')]"
            ],
            "tags": {
                "displayName": "BaseVM"
            },
            "properties": {
                "osProfile": {
                "computerName": "[parameters('virtualMachineName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                "imageReference": {
                    "publisher": "[parameters('virtualMachineImagePublisher')]",
                    "offer": "[parameters('virtualMachineImageOffer')]",
                    "sku": "[parameters('vrtutalMachineSKU')]",
                    "version": "latest"
                },
                "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                    "storageAccountType": "Standard_LRS"
                    }
                },
                "dataDisks": []
                },
                "networkProfile": {
                "networkInterfaces": [
                    {
                    "id": "[variables('vmNicResoucreID')]"
                    }
                ]

                }

            }
        }
        
        
    ]
}